name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7.x' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)
      env:
        email_from: prophetsfai@gmail.com
        email_pass: ${{ secrets.prophets_email_pass}}
        email_members: deds15@gmail.com
        token: ${{ secrets.oanda_test_token}}
        trading_url: ${{ secrets.oanda_test_url}}
        telegram_token: ${{ secrets.telegram_test_token}}
        telegram_chat_id: ${{ secrets.telegram_test_chat_id}}
        json_google_account: ${{ secrets.json_google_account}}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Google Cloud Platform (GCP) CLI - gcloud
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: |
          info
          gsutil cp -m 'gs://forex_models/models/gb*'  apollo/src/assets/models/
          gsutil cp -m -r 'gs://forex_models/models/variables'  apollo/src/assets/
       
    - name: Run code
      run: |
        cd apollo/
        python src/trading.py


#jobs:
  #build:
    #runs-on: ubuntu-19.04
    #steps:
    #- uses: actions/checkout@master
    #- name: Set up Python 3.7.3
      #uses: actions/setup-python@v1
      #with:
        #python-version: 3.7.3
      #env:
        #email_from: prophetsfai@gmail.com
        #email_pass: ${{ secrets.prophets_email_pass}}
        #email_members: deds15@gmail.com
        #token: ${{ secrets.oanda_test_token}}
        #trading_url: ${{ secrets.oanda_test_url}}
        #telegram_token: ${{ secrets.telegram_test_token}}
        #telegram_chat_id: ${{ secrets.telegram_test_chat_id}}
#    
    #- name: Install dependencies
      #run: |
        #python -m pip install --upgrade pip
        #pip install -r requirements.txt
    #- name: Lint with flake8
      #run: |
        #pip install flake8
        ## stop the build if there are Python syntax errors or undefined names
        #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        ## exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    ##- name: Test with pytest
      ##run: |
        ##pip install pytest
        ##pytest